@page "/inputsoutputs/{Id}"
@using TestAutomation.Data
@inject TestCaseService TestCaseService
@inject NavigationManager NavigationManager

<PageTitle>Test Cases</PageTitle>
@if (testInputs == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container-xl">
        <div class="row">
            <div class="table-responsive">
                <div class="table-wrapper">
                    <div class="table-title">
                        <div class="row">
                            <div class="col-sm-6">
                                <h2>Test <b>Inputs</b></h2>
                            </div>
                            <div class="col-sm-6">
                                @*<a href="#addEmployeeModal" class="btn btn-success" data-toggle="modal"><i class="material-icons">&#xE147;</i> <span>Add New Employee</span></a>*@
                                @*<NavLink class="btn btn-success" href="AddTestCase">
                            <i class="material-icons">&#xE147;</i><span>Add New Test Case</span>
                            </NavLink>*@
                            </div>
                        </div>
                    </div>
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th></th>
                                <th>
                                    <label for="Name" class="control-label">Name</label>
                                    <input form="Name" class="form-control" @bind="@newTestCaseInput.Name" placeholder="Name" required />
                                </th>
                                <th>
                                    <label for="Value" class="control-label">Value</label>
                                    <input form="Value" class="form-control" @bind="@newTestCaseInput.Value" placeholder="Value" required />
                                </th>
                                <th>
                                    <button type="button" class="btn btn-success" @onclick="@CreateTestCaseInput">
                                        <span class="glyphicon glyphicon-plus"></span> Add
                                    </button>
                                </th>
                            </tr>
                            <tr>
                                <th>ID</th>
                                <th>Module Name</th>
                                <th>Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var test in testInputs)
                            {
                                <tr>
                                    <td>@test.Id</td>
                                    <td>@test.Name</td>
                                    <td>@test.Value</td>
                                    <td>
                                        <i class="material-icons pointer" data-toggle="tooltip" title="Delete" @onclick="() => DeleteTestCaseInput(test)">&#xE872;</i>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="clearfix">
                        <div class="hint-text"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="table-responsive">
                <div class="table-wrapper">
                    <div class="table-title">
                        <div class="row">
                            <div class="col-sm-6">
                                <h2>Test <b>Outputs</b></h2>
                            </div>
                            <div class="col-sm-6">
                                @*<a href="#addEmployeeModal" class="btn btn-success" data-toggle="modal"><i class="material-icons">&#xE147;</i> <span>Add New Employee</span></a>*@
                                @*<i class="btn btn-success material-icons">&#xE147;<span>Add New Test Case</span></i>*@

                            </div>
                        </div>
                    </div>
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th></th>
                                <th>
                                    <label for="Name" class="control-label">Name</label>
                                    <input form="Name" class="form-control" @bind="@newTestCaseOutput.Name" placeholder="Name" required />
                                </th>
                                <th>
                                    <label for="Value" class="control-label">Value</label>
                                    <input form="Value" class="form-control" @bind="@newTestCaseOutput.Value" placeholder="Value" required />
                                </th>
                                <th>
                                    <button type="button" class="btn btn-success" @onclick="@CreateTestCaseOutput">
                                        <span class="glyphicon glyphicon-plus"></span> Add
                                    </button>
                                </th>
                            </tr>
                            <tr>
                                <th>ID</th>
                                <th>Module Name</th>
                                <th>Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var test in testOutputs)
                            {
                                <tr>
                                    <td>@test.Id</td>
                                    <td>@test.Name</td>
                                    <td>@test.Value</td>
                                    <td>
                                        <i class="material-icons pointer" data-toggle="tooltip" title="Delete" @onclick="() => DeleteTestCaseOutput(test)">&#xE872;</i>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="clearfix">
                        <div class="hint-text"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private List<TestCaseInput> testInputs;
    private List<TestCaseOutput> testOutputs;
    private TestCase currentTestCase;

    TestCaseInput newTestCaseInput = new TestCaseInput();
    TestCaseOutput newTestCaseOutput = new TestCaseOutput();


    protected override async Task OnInitializedAsync()
    {
        await Refresh();

        currentTestCase = await TestCaseService.GetTestCaseAsync(Convert.ToInt32(Id));
    }

    private async Task Refresh()
    {
        testInputs = await TestCaseService.GetAllTestInputsAsync(Convert.ToInt32(Id));
        testOutputs = await TestCaseService.GetAllTestOutputsAsync(Convert.ToInt32(Id));
    }

    protected async Task CreateTestCaseInput()
    {
        newTestCaseInput.TestCase = currentTestCase;
        await TestCaseService.InsertTestCaseInputAsync(newTestCaseInput);
        newTestCaseInput = new TestCaseInput();
        await Refresh();
    }

    protected async Task CreateTestCaseOutput()
    {
        newTestCaseOutput.TestCase = currentTestCase;
        await TestCaseService.InsertTestCaseOutputAsync(newTestCaseOutput);
        newTestCaseOutput = new TestCaseOutput();
        await Refresh();
    }

    protected async Task DeleteTestCaseInput(TestCaseInput inputTestCase)
    {
        await TestCaseService.DeleteTestCaseInputAsync(inputTestCase);
        await Refresh();
    }

    protected async Task DeleteTestCaseOutput(TestCaseOutput outputTestCase)
    {
        await TestCaseService.DeleteTestCaseOutputAsync(outputTestCase);
        await Refresh();
    }
}
